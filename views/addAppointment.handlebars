{{!< layouts/main}} <section class="add-form">
    <div class="container">
        <h2>Add Appointment</h2>

        <form action="book-appointment" id="addAppointmentForm" method="POST">
            <div class="form-group">
                <label for="dentistSelect">
                    <h2>Select Dentist:</h2>
                </label>
                <select class="form-control" id="dentistSelect" name="dentistId">
                    {{#each dentists}}
                    <option value="{{ this.DentistNo }}">{{ this.Name }}</option>
                    {{/each}}
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Select</button>
        </form>

        <div id="appointmentSlots" style="display: none;">
            <h3>Select an available slot:</h3>
            <div id="availableSlots">
                <!-- Appointment slots will be dynamically populated here -->
            </div>
        </div>

        <div id="selectPatient" style="display: none;">
            <h2>Select Patient:</h2>
            <select class="form-control" id="patientSelect">
                <!-- Patients will be dynamically populated here -->
            </select>
        </div>

        <div id="detailsPage" style="display: none;">
            <h3>Confirm Appointment</h3>
            <form id="appointmentForm">
                <input type="hidden" id="date" name="date">
                <input type="hidden" id="time" name="time">
                <input type="hidden" id="dentistId" name="dentistId">
                <input type="hidden" id="patientId" name="patientId"> <!-- Include this line -->
                <button type="button" class="btn btn-primary" id="confirmAppointmentBtn">Confirm Appointment</button>
                <input type="submit" style="display: none;"> <!-- Hidden submit button -->
            </form>
        </div>

        <div id="nextAvailableSlot" style="display: none;">
            <h3>Next Available Slot:</h3>
            <button class="btn btn-primary" id="nextSlotInfo"></button>
        </div>
    </div>
    </section>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addAppointmentForm = document.getElementById('addAppointmentForm');
            const appointmentSlots = document.getElementById('appointmentSlots');
            const availableSlots = document.getElementById('availableSlots');
            const selectPatient = document.getElementById('selectPatient');
            const patientSelect = document.getElementById('patientSelect');
            const detailsPage = document.getElementById('detailsPage');
            const nextAvailableSlot = document.getElementById('nextAvailableSlot');
            const nextSlotInfo = document.getElementById('nextSlotInfo');
            const confirmAppointmentBtn = document.getElementById('confirmAppointmentBtn'); // Select the confirm button

            // Event listener for selecting a patient
            patientSelect.addEventListener('change', function () {
                const patientId = this.value;
                document.getElementById('patientId').value = patientId; // Assign patient ID to the hidden input field

                // Show the details page and hide other sections
                detailsPage.style.display = 'block';
                appointmentSlots.style.display = 'none';
                nextAvailableSlot.style.display = 'none';

                // Event listener for the confirm appointment button
                confirmAppointmentBtn.addEventListener('click', function () {
                    // Extract appointment details from the form
                    const date = document.getElementById('date').value;
                    const time = document.getElementById('time').value;
                    const dentistId = document.getElementById('dentistId').value;
                    const patientId = document.getElementById('patientId').value;

                    fetch('/book-appointment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            date: date,
                            time: time,
                            dentistId: dentistId,
                            patientId: patientId
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Appointment booked successfully:', data);
                            if (data.success && data.redirectTo) {
                                // Redirect to the specified URL
                                window.location.href = data.redirectTo;
                            } else {
                                // Handle error or other scenarios
                                console.error('Error or invalid redirection data:', data);
                            }
                        })
                        .catch(error => {
                            console.error('Error booking appointment:', error);
                            // Optionally, handle error messages or actions here
                        });
                });
            });

            // Event listener for clicking the "Next Available Slot" button
            nextSlotInfo.addEventListener('click', function () {
                nextAvailableSlot.style.display = 'none'; // Hide the next available slot section
                appointmentSlots.style.display = 'block'; // Show the appointment slots section
            });

            addAppointmentForm.addEventListener('submit', function (event) {
                event.preventDefault();
                const dentistId = document.getElementById('dentistSelect').value;

                fetch(`/next-available-slot?dentistId=${dentistId}`)
                    .then(response => response.json())
                    .then(nextSlot => {
                        if (!nextSlot || !nextSlot.date || !nextSlot.time) {
                            console.error('No available slots found');
                            // Optionally, you can display a message to the user indicating no available slots
                            return;
                        }

                        nextSlotInfo.textContent = `${nextSlot.date} ${nextSlot.time}`;
                        nextAvailableSlot.style.display = 'block'; // Show the next available slot section

                        // Clear previous slots
                        availableSlots.innerHTML = '';

                        // Create button for the next available slot
                        const button = document.createElement('button');
                        button.textContent = `Book ${nextSlot.date} ${nextSlot.time}`;
                        button.className = 'btn btn-primary';
                        button.addEventListener('click', function () {
                            // Set selected date and time
                            document.getElementById('date').value = nextSlot.date;
                            document.getElementById('time').value = nextSlot.time;
                            document.getElementById('dentistId').value = dentistId;

                            // Show patient selection
                            appointmentSlots.style.display = 'none';
                            selectPatient.style.display = 'block';

                            // Fetch and populate patient options dynamically
                            fetch(`/patients?dentistId=${dentistId}`)
                                .then(response => response.json())
                                .then(patients => {
                                    // Clear previous options
                                    patientSelect.innerHTML = '';

                                    // Populate patient options
                                    patients.forEach(patient => {
                                        const option = document.createElement('option');
                                        option.value = patient.PatientNo;
                                        option.textContent = patient.Name;
                                        patientSelect.appendChild(option);
                                    });
                                })
                                .catch(error => console.error('Error fetching patients:', error));
                        });

                        // Append button to availableSlots div
                        availableSlots.appendChild(button);
                    })
                    .catch(error => console.error('Error fetching next available slot:', error));
            });
        });

    </script>